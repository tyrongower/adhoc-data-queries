# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  push:
    tags:
      - 'v*'

      # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-publish-project:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.x.x' # SDK Version to use; x will use the latest version of the 3.1 channel
      - run: dotnet build HappyLittleHelpers.AdhocDataQueries.csproj
      - name: Get the tag name
        run: echo "TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: publish on version change
        id: publish_nuget
        uses: rohith/publish-nuget@v2
        with:
          # Filepath of the project to be packaged, relative to root of repository
          PROJECT_FILE_PATH: /HappyLittleHelpers.AdhocDataQueries.csproj

          # NuGet package id, used for version detection & defaults to project name
          # PACKAGE_NAME: happy-little-helpers

          # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
          # VERSION_FILE_PATH: Directory.Build.props

          # Regex pattern to extract version info in a capturing group
          # VERSION_REGEX: ^\s*<PackageVersion>(.*)<\/PackageVersion>\s*$

          # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
          VERSION_STATIC: ${{ env.TAG }}

          # Flag to toggle git tagging, enabled by default
          TAG_COMMIT: false

          # Format of the git tag, [*] gets replaced with actual version
          # TAG_FORMAT: v*

          # API key to authenticate with NuGet server
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}

          # NuGet server uri hosting the packages, defaults to https://api.nuget.org
          NUGET_SOURCE: https://api.nuget.org