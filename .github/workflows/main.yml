# This is a basic workflow to help you get started with Actions

name: Release Pipleline

# Controls when the action will run.
on:
  push:
    tags:
      - 'v*'

      # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-publish-project:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get the tag name
        run: echo "TAG=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.x.x' # SDK Version to use; x will use the latest version of the 3.1 channel
      - run: dotnet build HappyLittleHelpers.AdhocDataQueries.csproj --configuration Release -p:Version=${{ env.TAG }}
      - name: publish on version change
        id: publish_nuget
        uses: rohith/publish-nuget@v2
        with:
          PROJECT_FILE_PATH: HappyLittleHelpers.AdhocDataQueries.csproj
          VERSION_STATIC: ${{ env.TAG }}
          TAG_COMMIT: false
          NUGET_KEY: ${{secrets.NUGET_API_KEY}}
          NUGET_SOURCE: https://api.nuget.org
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - uses: papeloto/action-zip@v1
        with:
          files: bin/Release/
          recursive: false
          dest: adhoc-data-queries${{ env.TAG }}.zip
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./adhoc-data-queries${{ env.TAG }}.zip
          asset_name: adhoc-data-queries${{ env.TAG }}.zip
          asset_content_type: application/zip
